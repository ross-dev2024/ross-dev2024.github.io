import{_ as t,c as a,d as i,o as n}from"./app-CzQcJAGt.js";const o={};function r(c,e){return n(),a("div",null,e[0]||(e[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>什么是javascript的作用域？</li><li>什么是 javascript的作用域链？</li></ol></div><h2 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域"><span>作用域</span></a></h2><p>作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。</p><p>作用域决定了代码区块中变量和其他资源的可见性。</p><h3 id="全局作用域" tabindex="-1"><a class="header-anchor" href="#全局作用域"><span>全局作用域</span></a></h3><p>在代码中任意地方都能访问到的对象拥有全局作用域。</p><h3 id="函数作用域" tabindex="-1"><a class="header-anchor" href="#函数作用域"><span>函数作用域</span></a></h3><p>声明在函数内部的变量，仅能在当前函数内部访问到的，拥有函数作用域</p><h3 id="块级作用域" tabindex="-1"><a class="header-anchor" href="#块级作用域"><span>块级作用域</span></a></h3><p>通过 <code>let</code> 或 <code>const</code> ，在 函数内部，或者在一队花括号 里声明的变量，拥有块级作用域</p><p>块级作用域 特性：</p><ul><li>声明的变量不会提升到当前作用域顶部</li><li>禁止重复声明</li></ul><h2 id="作用域链" tabindex="-1"><a class="header-anchor" href="#作用域链"><span>作用域链</span></a></h2><p>作用域链的作用是保证对执行环境有权访问的所有变量和函数的有序访问，通过作用域链，我们可以访问到外层环境的变量和函数。</p><p>作用域链本质上是一个指向变量对象的指针列表。变量对象是一个包含了执行环境中所有变量和函数的对象。 作用域链的前端使用都是当前执行上下文的变量对象。全局执行上下文的变量对象始终是作用域链的最后一个对象。</p><p>当我们查找一个变量时，如果当前执行环境中没有找到，会沿着作用域链向后查找。</p><p>作用域链的创建过程跟执行上下文的建立有关。</p>',17)]))}const s=t(o,[["render",r],["__file","index.html.vue"]]),l=JSON.parse(`{"path":"/interview-question/oc3hgg0h/","title":"作用域和作用域链","lang":"zh-CN","frontmatter":{"title":"作用域和作用域链","createTime":"2022/04/15 03:58:15","author":"pengzhanbo","permalink":"/interview-question/oc3hgg0h/","description":"提问 什么是javascript的作用域？ 什么是 javascript的作用域链？ 作用域 作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。 作用域决定了代码区块中变量和其他资源的可见性。 全局作用域 在代码中任意地方都能访问到的对象拥有全局作用域。 函数作用域 声明在函数内部的变量，仅能在当前函数内部访问到的，拥有函数作用域 块级...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://wangjw.cn/interview-question/oc3hgg0h/"}],["meta",{"property":"og:site_name","content":"ross.dev"}],["meta",{"property":"og:title","content":"作用域和作用域链"}],["meta",{"property":"og:description","content":"提问 什么是javascript的作用域？ 什么是 javascript的作用域链？ 作用域 作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。 作用域决定了代码区块中变量和其他资源的可见性。 全局作用域 在代码中任意地方都能访问到的对象拥有全局作用域。 函数作用域 声明在函数内部的变量，仅能在当前函数内部访问到的，拥有函数作用域 块级..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-04T06:47:40.000Z"}],["meta",{"property":"article:author","content":"pengzhanbo"}],["meta",{"property":"article:modified_time","content":"2024-10-04T06:47:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"作用域和作用域链\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-04T06:47:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"pengzhanbo\\"}]}"]]},"headers":[{"level":2,"title":"作用域","slug":"作用域","link":"#作用域","children":[{"level":3,"title":"全局作用域","slug":"全局作用域","link":"#全局作用域","children":[]},{"level":3,"title":"函数作用域","slug":"函数作用域","link":"#函数作用域","children":[]},{"level":3,"title":"块级作用域","slug":"块级作用域","link":"#块级作用域","children":[]}]},{"level":2,"title":"作用域链","slug":"作用域链","link":"#作用域链","children":[]}],"readingTime":{"minutes":1.45,"words":434},"git":{"createdTime":1728024460000,"updatedTime":1728024460000,"contributors":[{"name":"wangjw","email":"wangjw","commits":1}]},"autoDesc":true,"filePathRelative":"notes/面试题/JavaScript/作用域链.md"}`);export{s as comp,l as data};
