import{_ as t,c as a,d as r,o as n}from"./app-CoYBJm5w.js";const i="/images/21.Elasticsearch/38674b49.png",l="/images/21.Elasticsearch/2112fce4.png",s="/images/21.Elasticsearch/91a4ab12.png",o={};function c(p,e){return n(),a("div",null,e[0]||(e[0]=[r('<h2 id="analyzer" tabindex="-1"><a class="header-anchor" href="#analyzer"><span>Analyzer</span></a></h2><p>全文検索を行うために文章を単語の単位に分割する処理を、アナライザーと呼ぶ。 Analyzer とは、テキストを分析 (転置インデックスを作成) するルールです。</p><table><thead><tr><th><strong>Analyzer の要素</strong></th><th><strong>説明</strong></th></tr></thead><tbody><tr><td><a href="https://hogetech.info/oss/elasticsearch/analyzer#char_filter" target="_blank" rel="noopener noreferrer">Char Filter</a></td><td><strong>ドキュメントを前処理 (加工、フィルタリング)</strong></td></tr><tr><td><a href="https://hogetech.info/oss/elasticsearch/analyzer#tokenizer" target="_blank" rel="noopener noreferrer">Tokenizer Filter</a></td><td><strong>ドキュメントをトークン（単語）に分割</strong></td></tr><tr><td><a href="https://hogetech.info/oss/elasticsearch/analyzer#token_filter" target="_blank" rel="noopener noreferrer">Token filter</a></td><td><strong>トークン (単語) のフィルタリング</strong>不要なトークン(通常は単語) をフィルタリングします。</td></tr></tbody></table><ul><li>before</li></ul><div class="language-" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>人が恋に落ちるのは万有引力のせいではない。Albert Einstein（アルベルト・アインシュタイン）1879年 - 1955年</span></span></code></pre></div><ul><li>after</li></ul><div class="language-" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>人 恋 落ちる 万有引力 せい albert einstein アルベルト アインシュタイン 1879 年 1955 年</span></span></code></pre></div><h3 id="簡単例" tabindex="-1"><a class="header-anchor" href="#簡単例"><span>簡単例</span></a></h3><p><img src="'+i+'" alt=""></p><h3 id="詳細例" tabindex="-1"><a class="header-anchor" href="#詳細例"><span>詳細例</span></a></h3><p><img src="'+l+'" alt=""></p><h4 id="char-filter" tabindex="-1"><a class="header-anchor" href="#char-filter"><span>Char Filter</span></a></h4><p>入力されたテキストの前処理をするフィルタ機能です。インプットもアウトプットもテキストです。 ビルトインは3種類あります。 オプションなので、必要がなければ設定しなくてもかまいません。</p><blockquote><p>Tokenizer の前処理をする。例) HTMLをブラウザから見た文字列にする</p></blockquote><ul><li><p>HTML Strip Character Filter HTMLフォーマットを除去。見やすくなりました。 ここは<b>太字</b>です。 -&gt; ここは太字です。</p></li><li><p>Mapping Character Filter 特定文字をルールに基づいて変換。 絵文字とかの変換に使えそうです。 😃 -&gt; <em>happy</em></p></li><li><p>Pattern Replace Character Filter 定義されたルールに基づいて変換。 フォーマットの統一にいいですね。 2019/01/01 -&gt; 2019-01-01</p></li></ul><h4 id="tokenizer" tabindex="-1"><a class="header-anchor" href="#tokenizer"><span>Tokenizer</span></a></h4><p>テキストの分割処理を行い、トークン（単語）の列を生成します。インプットはテキストでアウトプットは単語です。 ビルトインは多くありますが、大きくカテゴリ分けして3種類あります。 ひとつのAnalyzerに一つ設定をしてください。</p><ul><li>単語分割系 テキストを単語に分割。 Big Dog! -&gt; BigDog</li><li>N-gram系 連続したn個の文字で分割。こちらは2-gramです。 Big Dog! -&gt; Biiggddoog</li></ul><h4 id="token-filter" tabindex="-1"><a class="header-anchor" href="#token-filter"><span>Token Filter</span></a></h4><p>分割したトークンに対して、トークン単位で変換処理を行うもの。インプットもアウトプットも単語です。 ビルトインは多くありますが、代表的なもの4つ紹介します。 オプションなので、必要がなければ設定しなくてもかまいません。</p><ul><li>Lowercase Token Filter 全て小文字にする。 BigDog -&gt; bigdog</li><li>Stop Token Filter ストップワードの除去。英語だと「the」「a」「for」などが挙げられます。 thisisapen -&gt; pen</li><li>Stemmer Token Filter ステミング（語幹処理）を行う。これは英語用ですが、別途プラグインで日本語に対応したものもあります。 making, maked -&gt; make</li><li>Synonym Token Filter 類義語を正規化して1つの単語にします。これは各自での定義する必要があります。 どのワードできても、同じ単語で扱いたい時に便利ですね。 ipod, i-pod, i pod =&gt; ipod 卵, 玉子, たまご</li></ul><p><img src="'+s+'" alt=""></p><ul><li>Lowercase Token Filter</li></ul><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://www.yuque.com/u2308208/zqm6t6/gb1ylvggeefavcrx#R7JSt:~:text=%E3%80%90Elasticsearch%20%E5%85%A5%E9%96%80%EF%BC%93%E3%80%91Analyzer%20%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%A8%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E5%85%A8%E9%83%A8%E6%A4%9C%E7%B4%A2" target="_blank" rel="noopener noreferrer">Elasticsearch 入門３】Analyzer の設定と日本語の全部検索</a></li><li><a href="https://qiita.com/boutan/items/4a4341ad7fcd11205b94#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB" target="_blank" rel="noopener noreferrer">【Elasticsearch】Analyzerの基本的なこと</a></li><li><a href="https://qiita.com/C_HERO/items/094af261db4725b4baa9#1-analyzer%E3%82%92%E6%A7%8B%E6%88%90%E3%81%99%E3%82%8B3%E3%81%A4%E3%81%AE%E8%A6%81%E7%B4%A0" target="_blank" rel="noopener noreferrer">analyzerを使う前に把握しておきたい内容まとめ</a></li><li><a href="https://livebook.manning.com/book/elasticsearch-in-action/chapter-5/15" target="_blank" rel="noopener noreferrer">elasticsearch-in-action</a></li></ul>',25)]))}const d=t(o,[["render",c],["__file","index.html.vue"]]),g=JSON.parse(`{"path":"/es/elastic0103/","title":"Analyzer","lang":"zh-CN","frontmatter":{"title":"Analyzer","author":"ross","createTime":"2020-05-11T13:59:38.000Z","permalink":"/es/elastic0103/","description":"Analyzer 全文検索を行うために文章を単語の単位に分割する処理を、アナライザーと呼ぶ。 Analyzer とは、テキストを分析 (転置インデックスを作成) するルールです。 before after 簡単例 詳細例 Char Filter 入力されたテキストの前処理をするフィルタ機能です。インプットもアウトプットもテキストです。 ビルトインは3種...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://wangjw.cn/es/elastic0103/"}],["meta",{"property":"og:site_name","content":"ross.dev"}],["meta",{"property":"og:title","content":"Analyzer"}],["meta",{"property":"og:description","content":"Analyzer 全文検索を行うために文章を単語の単位に分割する処理を、アナライザーと呼ぶ。 Analyzer とは、テキストを分析 (転置インデックスを作成) するルールです。 before after 簡単例 詳細例 Char Filter 入力されたテキストの前処理をするフィルタ機能です。インプットもアウトプットもテキストです。 ビルトインは3種..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wangjw.cn/images/21.Elasticsearch/38674b49.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-05T09:23:17.000Z"}],["meta",{"property":"article:author","content":"ross"}],["meta",{"property":"article:modified_time","content":"2024-10-05T09:23:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Analyzer\\",\\"image\\":[\\"https://wangjw.cn/images/21.Elasticsearch/38674b49.png\\",\\"https://wangjw.cn/images/21.Elasticsearch/2112fce4.png\\",\\"https://wangjw.cn/images/21.Elasticsearch/91a4ab12.png\\"],\\"dateModified\\":\\"2024-10-05T09:23:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ross\\"}]}"]]},"headers":[{"level":2,"title":"Analyzer","slug":"analyzer","link":"#analyzer","children":[{"level":3,"title":"簡単例","slug":"簡単例","link":"#簡単例","children":[]},{"level":3,"title":"詳細例","slug":"詳細例","link":"#詳細例","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":1.58,"words":475},"git":{"createdTime":1728024460000,"updatedTime":1728120197000,"contributors":[{"name":"wangjw","email":"wangjw","commits":1}]},"autoDesc":true,"filePathRelative":"notes/21.Elasticsearch/1.Concept/3.analyzer.md"}`);export{d as comp,g as data};
