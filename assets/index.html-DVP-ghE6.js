import{_ as e,c as t,d as i,o as s}from"./app-Dg_oyx95.js";const d={};function c(n,a){return s(),t("div",null,a[0]||(a[0]=[i(`<h2 id="using-space-between" tabindex="-1" data-v-6aa32c3b><a class="header-anchor" href="#using-space-between" data-v-6aa32c3b><span data-v-6aa32c3b>Using Space Between</span></a></h2><p data-v-6aa32c3b>在 Flex 容器中， 我们可以使用 <code data-v-6aa32c3b>space-between</code> 来定义项目之间的间距。 当子项的数量 符合我们的 布局预期时，在 UI 效果上来看还不错。 但是，如果 项目的数量过多或过少时，布局就会看起来很糟糕。</p><p data-v-6aa32c3b>请看下面示例：</p><div class="language-css" data-ext="css" data-title="css" data-v-6aa32c3b><button class="copy" title="复制代码" data-copied="已复制" data-v-6aa32c3b></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" data-v-6aa32c3b><code data-v-6aa32c3b><span class="line" data-v-6aa32c3b><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;" data-v-6aa32c3b>wrapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b> {</span></span>
<span class="line" data-v-6aa32c3b><span style="--shiki-light:#998418;--shiki-dark:#B8A965;" data-v-6aa32c3b>  display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;" data-v-6aa32c3b> flex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>;</span></span>
<span class="line" data-v-6aa32c3b><span style="--shiki-light:#998418;--shiki-dark:#B8A965;" data-v-6aa32c3b>  justify-content</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;" data-v-6aa32c3b> space-between</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>;</span></span>
<span class="line" data-v-6aa32c3b><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>}</span></span></code></pre></div><div class="demo-wrapper" data-v-6aa32c3b><div class="demo-head" data-v-6aa32c3b><div class="demo-ctrl" data-v-6aa32c3b><i data-v-6aa32c3b></i><i data-v-6aa32c3b></i><i data-v-6aa32c3b></i></div></div><div class="demo-container" data-v-6aa32c3b><p align="center" data-v-6aa32c3b>justify-content: space-between</p><p data-v-6aa32c3b>项目为 4 个时，看起来还不错。</p><div class="flex-box" data-v-6aa32c3b><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div></div><p data-v-6aa32c3b>项目为 3 个时，间隔就过大了。</p><div class="flex-box" data-v-6aa32c3b><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div></div></div></div><p data-v-6aa32c3b>对此，我们有不同的解决方案：</p><ul data-v-6aa32c3b><li data-v-6aa32c3b>使用 <code data-v-6aa32c3b>margin</code> 设置外边距作为间隔</li><li data-v-6aa32c3b>使用 flexbox <code data-v-6aa32c3b>gap</code> 设置间隔</li><li data-v-6aa32c3b>在父元素上使用 <code data-v-6aa32c3b>padding</code> 作为 子元素 间隔</li><li data-v-6aa32c3b>添加空白元素作为间隔</li></ul><p data-v-6aa32c3b>比如，我们使用 <code data-v-6aa32c3b>gap</code> 设置 间隔</p><div class="language-css" data-ext="css" data-title="css" data-v-6aa32c3b><button class="copy" title="复制代码" data-copied="已复制" data-v-6aa32c3b></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" data-v-6aa32c3b><code data-v-6aa32c3b><span class="line" data-v-6aa32c3b><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;" data-v-6aa32c3b>wrapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b> {</span></span>
<span class="line" data-v-6aa32c3b><span style="--shiki-light:#998418;--shiki-dark:#B8A965;" data-v-6aa32c3b>  display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;" data-v-6aa32c3b> flex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>;</span></span>
<span class="line" data-v-6aa32c3b><span style="--shiki-light:#998418;--shiki-dark:#B8A965;" data-v-6aa32c3b>  gap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;" data-v-6aa32c3b> 1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;" data-v-6aa32c3b>rem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>;</span></span>
<span class="line" data-v-6aa32c3b><span style="--shiki-light:#999999;--shiki-dark:#666666;" data-v-6aa32c3b>}</span></span></code></pre></div><div class="demo-wrapper" data-v-6aa32c3b><div class="demo-head" data-v-6aa32c3b><div class="demo-ctrl" data-v-6aa32c3b><i data-v-6aa32c3b></i><i data-v-6aa32c3b></i><i data-v-6aa32c3b></i></div></div><div class="demo-container" data-v-6aa32c3b><p align="center" data-v-6aa32c3b>gap: 1rem</p><div class="flex-box gap" data-v-6aa32c3b><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div></div><div class="flex-box gap" data-v-6aa32c3b><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div><div data-v-6aa32c3b></div></div></div></div>`,10)]))}const v=e(d,[["render",c],["__scopeId","data-v-6aa32c3b"],["__file","index.html.vue"]]),l=JSON.parse(`{"path":"/defensive-css/using-space-between/","title":"Using Space Between","lang":"zh-CN","frontmatter":{"title":"Using Space Between","author":"鹏展博","createTime":"2023/08/09 13:25:55","permalink":"/defensive-css/using-space-between/","description":"Using Space Between 在 Flex 容器中， 我们可以使用 space-between 来定义项目之间的间距。 当子项的数量 符合我们的 布局预期时，在 UI 效果上来看还不错。 但是，如果 项目的数量过多或过少时，布局就会看起来很糟糕。 请看下面示例： justify-content: space-between 项目为 4 个时，...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://wangjw.cn/defensive-css/using-space-between/"}],["meta",{"property":"og:site_name","content":"ross.dev"}],["meta",{"property":"og:title","content":"Using Space Between"}],["meta",{"property":"og:description","content":"Using Space Between 在 Flex 容器中， 我们可以使用 space-between 来定义项目之间的间距。 当子项的数量 符合我们的 布局预期时，在 UI 效果上来看还不错。 但是，如果 项目的数量过多或过少时，布局就会看起来很糟糕。 请看下面示例： justify-content: space-between 项目为 4 个时，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-29T09:19:03.000Z"}],["meta",{"property":"article:author","content":"鹏展博"}],["meta",{"property":"article:modified_time","content":"2024-09-29T09:19:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Using Space Between\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-29T09:19:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鹏展博\\"}]}"]]},"headers":[{"level":2,"title":"Using Space Between","slug":"using-space-between","link":"#using-space-between","children":[]}],"readingTime":{"minutes":1.13,"words":338},"git":{"createdTime":1727601543000,"updatedTime":1727601543000,"contributors":[{"name":"wangjw","email":"wangjw","commits":1}]},"autoDesc":true,"filePathRelative":"notes/防御性CSS/using-space-between.md"}`);export{v as comp,l as data};
